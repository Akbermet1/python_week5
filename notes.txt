Wednesday:
ООП - подход (парадигма), в котором части программы выражаются в виде объектов

наследование - процесс, когда из одного класса происходит другой

классы:
родительский(базовый) класс / parent(inherited) class
дочерний(производный) класс / child(derived) class

дочерний класс может определять свои свойства, методы


Thursday:
principles of OOP:
inheritance, encapsulation, polymorphism
inheritance - произведение одних классов от других

why do we need ingeritance?
we need it so that we could decribe something abstract (e.g. animals)

ассоциация - связь объектов разных классов


Friday:
полиморфизм - множество форм

(В контексте ООП)полиморфизм - обработка объектов разных типов, классов одним методом(интерфейсом)ю
На самом деле одинаковым является только имя метода, его исходный код зависит от класса.
Кроме того, результаты работы одноименных методов могут существенно различаться.
Поэтому в данном контексте под полиморфизмом понимается множество форм одного и того же слова – имени метода.

from class:
полиморфизм - возможность функции работать с объектами разных типов, при условии что объект
поддерживает операцию(объект обладает ужным методом)

To ask during class:
Значит если у разных классов у которых нет общего предка, есть методы с одинаковым названием, это полиморфизм?
Почему? 

Какой вообще смысл указвать общий для предков метод(без имплементации) в базовом классе если реализация вообще разная?
Мы же всеравно повторяем код
example from yesterday's class work